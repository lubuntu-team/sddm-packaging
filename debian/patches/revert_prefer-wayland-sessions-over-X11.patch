commit a9993d891856368eba1ec26d375eb3a62fe73719
Author: Rik Mills <rikmills@kde.org>
Date:   Thu Feb 18 17:24:24 2021 +0000

    Revert "Prefer Wayland sessions over X11 ones"
    
    This reverts commit 994fa67b01ccfac1aaac08572302bbbea7842dc3.

--- a/src/common/Session.cpp
+++ b/src/common/Session.cpp
@@ -142,14 +142,14 @@
         QStringList sessionDirs;
 
         switch (type) {
-        case WaylandSession:
-            sessionDirs = mainConfig.Wayland.SessionDir.get();
-            m_xdgSessionType = QStringLiteral("wayland");
-            break;
         case X11Session:
             sessionDirs = mainConfig.X11.SessionDir.get();
             m_xdgSessionType = QStringLiteral("x11");
             break;
+        case WaylandSession:
+            sessionDirs = mainConfig.Wayland.SessionDir.get();
+            m_xdgSessionType = QStringLiteral("wayland");
+            break;
         default:
             m_xdgSessionType.clear();
             break;
--- a/src/daemon/Display.cpp
+++ b/src/daemon/Display.cpp
@@ -211,10 +211,10 @@
         if (autologinSession.isEmpty()) {
             autologinSession = stateConfig.Last.Session.get();
         }
-        if (findSessionEntry(mainConfig.Wayland.SessionDir.get(), autologinSession)) {
-            sessionType = Session::WaylandSession;
-        } else if (findSessionEntry(mainConfig.X11.SessionDir.get(), autologinSession)) {
+        if (findSessionEntry(mainConfig.X11.SessionDir.get(), autologinSession)) {
             sessionType = Session::X11Session;
+        } else if (findSessionEntry(mainConfig.Wayland.SessionDir.get(), autologinSession)) {
+            sessionType = Session::WaylandSession;
         } else {
             qCritical() << "Unable to find autologin session entry" << autologinSession;
             return false;
--- a/src/greeter/SessionModel.cpp
+++ b/src/greeter/SessionModel.cpp
@@ -46,9 +46,9 @@
 
         // initial population
         beginResetModel();
+        populate(Session::X11Session, mainConfig.X11.SessionDir.get());
         if (dri_active)
             populate(Session::WaylandSession, mainConfig.Wayland.SessionDir.get());
-        populate(Session::X11Session, mainConfig.X11.SessionDir.get());
         endResetModel();
 
         // refresh everytime a file is changed, added or removed
@@ -59,13 +59,13 @@
             beginResetModel();
             d->sessions.clear();
             d->displayNames.clear();
+            populate(Session::X11Session, mainConfig.X11.SessionDir.get());
             if (dri_active)
                 populate(Session::WaylandSession, mainConfig.Wayland.SessionDir.get());
-            populate(Session::X11Session, mainConfig.X11.SessionDir.get());
             endResetModel();
         });
-        watcher->addPaths(mainConfig.Wayland.SessionDir.get());
         watcher->addPaths(mainConfig.X11.SessionDir.get());
+        watcher->addPaths(mainConfig.Wayland.SessionDir.get());
     }
 
     SessionModel::~SessionModel() {
